---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dravip
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
  - apiGroups:
      - "resource.k8s.io"
    resources:
      - resourceslices
    verbs:
      - list
      - watch
      - create
      - update
      - delete
  - apiGroups:
      - "resource.k8s.io"
    resources:
      - resourceclaims
      - deviceclasses
    verbs:
      - get
  - apiGroups:
      - "resource.k8s.io"
    resources:
      - resourceclaims/status
    verbs:
      - patch
      - update
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dravip
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dravip
subjects:
- kind: ServiceAccount
  name: dravip
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dravip
  namespace: kube-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: dravip
  namespace: kube-system
  labels:
    tier: node
    app: dravip
    k8s-app: dravip
spec:
  selector:
    matchLabels:
      app: dravip
  template:
    metadata:
      labels:
        tier: node
        app: dravip
        k8s-app: dravip
    spec:
      hostNetwork: true
      tolerations:
      - operator: Exists
        effect: NoSchedule
      serviceAccountName: dravip
      hostPID: true
      containers:
      - name: driver
        args:
        - /driver
        - --v=4
        image: ghcr.io/gke-labs/dravip:stable
        resources:
          requests:
            cpu: "100m"
            memory: "50Mi"
        securityContext:
          privileged: true
        readinessProbe:
          httpGet:
            path: /healthz
            port: 9177
        volumeMounts:
        - name: device-plugin
          mountPath: /var/lib/kubelet/plugins
        - name: plugin-registry
          mountPath: /var/lib/kubelet/plugins_registry
        - name: nri-plugin
          mountPath: /var/run/nri
        - name: netns
          mountPath: /var/run/netns
          mountPropagation: HostToContainer
      volumes:
      - name: device-plugin
        hostPath:
          path: /var/lib/kubelet/plugins
      - name: plugin-registry
        hostPath:
          path: /var/lib/kubelet/plugins_registry
      - name: nri-plugin
        hostPath:
          path: /var/run/nri
      - name: netns
        hostPath:
          path: /var/run/netns
      - name: etc
        hostPath:
          path: /etc
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dravip-controller
rules:
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - "resource.k8s.io"
    resources:
      - resourceclaims
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - "resource.k8s.io"
    resources:
      - resourceslices
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - "resource.k8s.io"
    resources:
      - deviceclasses
    verbs:
      - create
      - update
      - delete
      - get
      - list
      - watch
  - apiGroups:
      - "coordination.k8s.io"
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dravip-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dravip-controller
subjects:
- kind: ServiceAccount
  name: dravip-controller
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dravip-controller
  namespace: kube-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dravip-controller
  namespace: kube-system
  labels:
    tier: control-plane
    app: dravip-controller
    k8s-app: dravip-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dravip-controller
  template:
    metadata:
      labels:
        tier: control-plane
        app: dravip-controller
        k8s-app: dravip-controller
    spec:
      serviceAccountName: dravip-controller
      containers:
      - name: controller
        args:
        - /controller
        - --v=4
        image: ghcr.io/gke-labs/dravip-controller:stable
        resources:
          requests:
            cpu: "100m"
            memory: "50Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
        readinessProbe:
          httpGet:
            path: /healthz
            port: 9177
        livenessProbe:
          httpGet:
            path: /healthz
            port: 9177
          initialDelaySeconds: 30
          periodSeconds: 10
---
